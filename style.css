:root {
  --bg: #0f1220;
  --card: #161a2b;
  --text: #e6e8f0;
  --muted: #9aa3b2;
  --ring: #6ea8ff;
  --border: #2a3046;
  --good: #35c28d;
}

/* Base reset */
* { box-sizing: border-box; }
html, body {
  height: 100%;
  margin: 0;
  color: var(--text);
  background: var(--bg); /* base color - glow layers are below */
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, Arial, "Apple Color Emoji", "Segoe UI Emoji";
}
button, input, select { font: inherit; color: inherit; }

/* Fixed glow + subtle grain that scales on long pages */
body::before{
  content:"";
  position:fixed;
  inset:-40% -20% -20% -20%;
  z-index:-1;
  pointer-events:none;
  background:
    radial-gradient(1200px 800px at 18% -8%, #1a2040 0%, rgba(26,32,64,0.6) 32%, transparent 60%),
    radial-gradient(900px 700px at 90% 0%, rgba(30,36,70,0.35), transparent 60%),
    linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0));
}
body::after{
  content:"";
  position:fixed;
  inset:0;
  z-index:-1;
  pointer-events:none;
  background-image:url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="120" height="120" viewBox="0 0 120 120"><filter id="n"><feTurbulence type="fractalNoise" baseFrequency=".8" numOctaves="2" stitchTiles="stitch"/></filter><rect width="120" height="120" filter="url(%23n)" opacity=".035"/></svg>');
  background-size:220px 220px;
  mix-blend-mode:overlay;
  opacity:.6;
}

.app {
  display: grid;
  grid-template-columns: 360px 1fr; /* left sidebar fixed, right canvas grows */
  min-height: 100vh;
}

/* Sticky left panel */
.sidebar {
  padding: 2rem 1rem 2rem 1.5rem;
  position: sticky;
  top: 16px;
  align-self: start; /* ensures sticky works inside grid */
  height: fit-content;
}

.canvas {
  display: grid;
  place-items: start center; /* center horizontally, start from top vertically */
  padding: 3rem 1.5rem;
}

/* Card */
.card {
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 16px;
  padding: 20px;
  box-shadow: 0 10px 30px rgba(0,0,0,0.35), inset 0 1px 0 rgba(255,255,255,0.02);
}
.card h2 { margin: 0 0 6px 0; font-size: 1.25rem; letter-spacing: 0.2px; }
.card .hint { margin: 0 0 16px 0; color: var(--muted); font-size: 0.95rem; }

/* Form */
.form { display: grid; gap: 14px; }
.form-group { display: grid; gap: 6px; }
label { font-size: 0.85rem; color: var(--muted); }

.input,
.select {
  width: 100%;
  padding: 10px 12px;
  border-radius: 12px;
  border: 1px solid var(--border);
  background: #0f1324;
  color: var(--text);
  outline: none;
  transition: border-color 120ms ease, box-shadow 120ms ease;
}

/* Inputs */
.input::placeholder { color: #788198; }
.input:focus { border-color: var(--ring); box-shadow: 0 0 0 3px rgba(110,168,255,0.2); }

/* Select: keep custom look and add arrow */
.select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-image:
    linear-gradient(45deg, transparent 50%, #9aa3b2 50%),
    linear-gradient(135deg, #9aa3b2 50%, transparent 50%),
    linear-gradient(#0f1324, #0f1324);
  background-position:
    calc(100% - 18px) calc(50% - 2px),
    calc(100% - 12px) calc(50% - 2px),
    100% 0;
  background-size: 6px 6px, 6px 6px, 2.4rem 100%;
  background-repeat: no-repeat;
  padding-right: 2.6rem;
}
.select:focus { border-color: var(--ring); box-shadow: 0 0 0 3px rgba(110,168,255,0.2); }

/* Buttons */
.btn {
  display: inline-block;
  border: 1px solid var(--border);
  background: #0f1324;
  color: var(--text);
  padding: 10px 12px;
  border-radius: 12px;
  cursor: pointer;
  transition: box-shadow 120ms ease, transform 60ms ease;
}
.btn:hover { box-shadow: 0 0 0 3px rgba(110,168,255,0.2); }
.btn:active { transform: translateY(1px); }

.btn-sm { padding: 6px 10px; border-radius: 10px; font-size: 0.9rem; }
.btn-ghost { background: transparent; border: 1px dashed var(--border); }

.form-actions {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 10px;
}

/* Nodes area */
.nodes {
  display: grid;
  gap: 12px;
  width: min(820px, 92%);
  position: relative;
  padding-bottom: 72px; /* breathing room at end */
}
.nodes::after{
  content:"";
  position: sticky;
  left: 0; right: 0; bottom: -1px;
  display: block;
  height: 72px;
  pointer-events: none;
  background: linear-gradient(to bottom, rgba(15,18,32,0), rgba(15,18,32,1));
}

.node {
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 16px;
  padding: 14px 16px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  box-shadow: 0 8px 20px rgba(0,0,0,0.25);
}
.node-title { font-weight: 600; }
.node-meta { color: var(--muted); font-size: 0.9rem; }
.node-pill {
  font-size: 0.8rem;
  padding: 4px 8px;
  border-radius: 999px;
  border: 1px solid var(--border);
  background: #0f1324;
  margin-left: 8px;
}
.node-ok { border-color: rgba(53,194,141,0.3); box-shadow: 0 0 0 3px rgba(53,194,141,0.15); }

/* Groups - add gentle vertical gradient so big stacks look layered */
.group {
  border: 1px solid rgba(53,194,141,0.28);
  background: linear-gradient(180deg, rgba(53,194,141,0.08), rgba(53,194,141,0.05));
  border-radius: 18px;
  padding: 14px;
  box-shadow: 0 6px 16px rgba(0,0,0,0.25);
}
.group + .group { margin-top: 22px; }
.group-header { display: flex; align-items: center; justify-content: space-between; margin-bottom: 10px; }
.group-title { font-weight: 600; }
.group-count { color: var(--muted); font-size: 0.9rem; }
.group-actions { display: flex; gap: 8px; }
.group-body { display: grid; gap: 12px; }
.group.active { box-shadow: 0 0 0 3px rgba(53,194,141,0.18), 0 6px 16px rgba(0,0,0,0.25); }

/* Responsive */
@media (max-width: 820px) {
  .app { grid-template-columns: 1fr; }
  .canvas { place-items: start; }
}

/* Extra: props container */
.props { display: grid; gap: 12px; }
/* Canvas split: nodes on the left, code sample on the right */
.canvas-inner {
  display: grid;
  grid-template-columns: 1fr 420px;
  gap: 24px;
  width: 100%;
}

/* Code panel */
.codepane {
  position: sticky;
  top: 16px;
  align-self: start;
  height: fit-content;
}

.codecard { padding: 0; }
.codecard .codecard-header {
  padding: 14px 16px;
  border-bottom: 1px solid var(--border);
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.codecard .codecard-header h3 {
  margin: 0;
  font-size: 1rem;
}
.codecard-header { gap: 8px; }
.codecard-actions { display: flex; align-items: center; gap: 8px; }

.toggle { display: inline-flex; align-items: center; gap: 6px; cursor: pointer; }
.toggle input { accent-color: var(--ring); }

.code {
  width: 100%;
  min-height: 360px;
  resize: vertical;
  background: #0b0f1f;
  color: #e6e8f0;
  border: none;
  border-radius: 0 0 16px 16px;
  padding: 14px 16px;
  line-height: 1.4;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 0.92rem;
  box-shadow: inset 0 0 0 1px var(--border);
}

/* Make code panel stack on mobile */
@media (max-width: 1100px) {
  .canvas-inner { grid-template-columns: 1fr; }
  .codepane { position: static; }
}


/* Tighten layout + keep columns from stretching with each other */
.canvas { padding: 2rem 1.25rem; }                 /* was 3rem 1.5rem */
.canvas-inner {
  display: grid;
  grid-template-columns: 1fr 560px;               /* wider code pane (was 420px) */
  gap: 16px;                                      /* was 24px */
  width: 100%;
  align-items: start;                              /* prevent cross-column stretching */
}

/* Sticky left panel stays visible while scrolling */
.sidebar {
  padding: 2rem 1rem 2rem 1.5rem;
  position: sticky;
  top: 16px;
  align-self: start;
  height: fit-content;
}

/* Nodes list: little more compact */
.nodes {
  gap: 10px;                                      /* was 12px */
  width: min(860px, 100%);                        /* a touch wider than 820 */
  position: relative;
  padding-bottom: 64px;                           /* was 72px */
}
/* Overridden node highlight */
.node-conflict {
  border-color: rgba(255, 99, 99, 0.35);
  box-shadow: 0 0 0 3px rgba(255, 99, 99, 0.15);
}

.node-warning {
  display: none;
  margin-left: 8px;
  font-size: 0.78rem;
  padding: 3px 8px;
  border-radius: 999px;
  border: 1px solid rgba(255, 99, 99, 0.35);
  background: rgba(255, 99, 99, 0.08);
  color: #ff9aa2;
}
.node-conflict .node-warning { display: inline-block; }
.group + .group { margin-top: 14px; }             /* was 22px */

/* Code panel stays sticky and only resizes vertically */
.codepane {
  position: sticky;
  top: 16px;
  align-self: start;
  height: fit-content;
}
.codecard { padding: 0; }
.code {
  width: 100%;
  min-height: 360px;
  max-width: 100%;       /* never overflow its column */
  resize: vertical;      /* vertical resize only */
  overflow: auto;
  box-sizing: border-box;
}

/* Stack on narrow screens */
@media (max-width: 1200px) {
  .canvas-inner { grid-template-columns: 1fr; }
  .codepane { position: static; }
}

/* Fill the middle, reduce empty space */
.canvas {
  padding: 2rem 1.5rem;
}

/* Center the working area and size both columns nicely */
.canvas-inner {
  display: grid;
  /* wider middle column, wider code pane */
  grid-template-columns: minmax(720px, 900px) minmax(520px, 640px);
  gap: 20px;
  max-width: 1600px;      /* keeps things from stretching too wide on huge screens */
  margin: 0 auto;         /* centers the pair of columns */
  align-items: start;      /* prevent cross column stretching */
}

/* Sidebar stays put and does not push content too far left */
.sidebar {
  padding: 2rem 1rem 2rem 1.5rem;
  position: sticky;
  top: 16px;
  align-self: start;
  height: fit-content;
  max-width: 380px;
}

/* Middle column should use the full allocated width */
.nodes {
  width: 100%;
  max-width: 900px;       /* matches the upper bound from canvas-inner */
  gap: 10px;
  position: relative;
  padding-bottom: 64px;
  padding-right: 18px;    /* breathing room for scrollbar */
}

/* Group spacing a touch tighter so the column feels filled */
.group + .group { margin-top: 14px; }

/* Code pane stays sticky, wider, and only vertical resize */
.codepane { position: sticky; top: 16px; align-self: start; height: fit-content; }
.code { max-width: 100%; resize: vertical; }

/* Stack on narrower screens */
@media (max-width: 1280px) {
  .canvas-inner { grid-template-columns: 1fr; }
  .codepane { position: static; }
}

/* ===========================
   Fit-to-viewport layout fixes
   =========================== */

/* Never let the 2-column canvas exceed the available width next to the sidebar */
.canvas { padding: 1.25rem; }

.canvas-inner {
  /* use all available width inside the canvas */
  width: 100%;
  max-width: none;             /* remove previous hard caps */
  margin: 0;
  display: grid;
  /* fluid columns: wide middle, capped code pane */
  grid-template-columns: minmax(560px, 1fr) minmax(360px, 520px);
  gap: 16px;
  align-items: start;
}

/* Make sure nodes column can shrink without forcing overflow */
.nodes {
  width: 100%;
  max-width: 100%;
}

/* Code pane: never wider than its column; only vertical resize */
.codepane { position: sticky; top: 12px; align-self: start; }
.code { max-width: 100%; resize: vertical; }

/* Sidebar width trimmed a touch so the canvas has more room */
.sidebar {
  max-width: 320px;            /* was ~340–360 */
  width: 100%;
  position: sticky;
  top: 12px;
  align-self: start;
}

/* If viewport is not wide enough for all three areas, stack the code pane */
@media (max-width: 1350px) {
  .canvas-inner {
    grid-template-columns: 1fr;   /* nodes full width */
  }
  .codepane { position: static; }
}

/* On narrower screens also stack the left sidebar above everything */
@media (max-width: 980px) {
  .app { grid-template-columns: 1fr; }
  .sidebar { position: static; max-width: 100%; }
  .canvas { padding: 1rem; }
}

/* As a last resort, ban horizontal scroll */
html, body { overflow-x: hidden; }


.json-error {
  color: #ff9aa2;
  font-size: 0.9rem;
  margin-top: 6px;
  white-space: pre-wrap;
}

.json-editor {
  position: relative;
  width: 100%;
}

.json-highlights {
  position: absolute;
  inset: 0;
  margin: 0;
  padding: 10px 12px;
  font-family: monospace;
  font-size: 0.9rem;
  line-height: 1.5;
  color: transparent; /* hide text itself */
  white-space: pre-wrap;
  overflow: hidden;
  pointer-events: none;
}

.json-highlights mark {
  background: rgba(255, 99, 99, 0.25);
  border-radius: 3px;
}

#filtersOutput.code {
  position: relative;
  background: transparent;
  color: var(--text);
  font-family: monospace;
  font-size: 0.9rem;
  line-height: 1.5;
  width: 100%;
  padding: 10px 12px;
  border-radius: 12px;
  border: 1px solid var(--border);
  resize: vertical;
}
